import requests
import pandas as pd
import matplotlib.pyplot as plt

class TokenPulsePro:
    def __init__(self, api_key: str):
        self.api_url = 'https://api.etherscan.io/api'
        self.api_key = api_key

    def get_token_info(self, contract_address: str) -> dict:
        params = {
            'module': 'token',
            'action': 'tokeninfo',
            'contractaddress': contract_address,
            'apikey': self.api_key
        }
        response = requests.get(self.api_url, params=params)
        return response.json().get('result', {})

    def get_token_transfers(self, contract_address: str) -> pd.DataFrame:
        params = {
            'module': 'account',
            'action': 'tokentx',
            'contractaddress': contract_address,
            'apikey': self.api_key
        }
        response = requests.get(self.api_url, params=params)
        transfers = response.json().get('result', [])
        tx_data = []
        for tx in transfers:
            tx_data.append({
                'hash': tx['hash'],
                'from': tx['from'],
                'to': tx['to'],
                'value': int(tx['value'], 16),  # Convert from hexadecimal to integer
                'timeStamp': int(tx['timeStamp'])
            })
        return pd.DataFrame(tx_data)

    def analyze_token_metrics(self, contract_address: str) -> dict:
        df = self.get_token_transfers(contract_address)
        if df.empty:
            return {
                'total_transfers': 0,
                'total_value_transferred': 0
            }
        total_transfers = len(df)
        total_value_transferred = df['value'].sum()
        return {
            'total_transfers': total_transfers,
            'total_value_transferred': total_value_transferred
        }

    def plot_token_transfers(self, contract_address: str):
        df = self.get_token_transfers(contract_address)
        if df.empty:
            print("No token transfer data found.")
            return

        df['timeStamp'] = pd.to_datetime(df['timeStamp'], unit='s')
        df.set_index('timeStamp', inplace=True)

        plt.figure(figsize=(12, 6))
        df['value'].resample('D').sum().plot()
        plt.title('Token Transfer Volume Over Time')
        plt.xlabel('Date')
        plt.ylabel('Total Value Transferred')
        plt.grid(True)
        plt.show()

# Example Usage
if __name__ == "__main__":
    ETHERSCAN_API_KEY = 'YOUR_ETHERSCAN_API_KEY'  # Replace with your Etherscan API key

    token_pulse_pro = TokenPulsePro(api_key=ETHERSCAN_API_KEY)

    # Fetch and Display Token Information
    contract_address = '0x... '  # Replace with the token contract address
    token_info = token_pulse_pro.get_token_info(contract_address)
    print(f"Token Information for contract address {contract_address}:")
    print(token_info)

    # Analyze and Plot Token Transfer Data
    token_pulse_pro.plot_token_transfers(contract_address=contract_address)
